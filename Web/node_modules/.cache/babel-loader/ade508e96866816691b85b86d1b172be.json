{"remainingRequest":"D:\\HbuildX\\Vue-Cli\\WriteBoardWeb\\node_modules\\thread-loader\\dist\\cjs.js!D:\\HbuildX\\Vue-Cli\\WriteBoardWeb\\node_modules\\babel-loader\\lib\\index.js!D:\\HbuildX\\Vue-Cli\\WriteBoardWeb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\HbuildX\\Vue-Cli\\WriteBoardWeb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HbuildX\\Vue-Cli\\WriteBoardWeb\\src\\components\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\HbuildX\\Vue-Cli\\WriteBoardWeb\\src\\components\\Login.vue","mtime":1626422686401},{"path":"D:\\HbuildX\\Vue-Cli\\WriteBoardWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626412951070},{"path":"D:\\HbuildX\\Vue-Cli\\WriteBoardWeb\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1626412948582},{"path":"D:\\HbuildX\\Vue-Cli\\WriteBoardWeb\\node_modules\\babel-loader\\lib\\index.js","mtime":1626412962269},{"path":"D:\\HbuildX\\Vue-Cli\\WriteBoardWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626412951070},{"path":"D:\\HbuildX\\Vue-Cli\\WriteBoardWeb\\node_modules\\vue-loader\\lib\\index.js","mtime":1626412960418}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nimport $ from \"../../node_modules/jquery/dist/jquery.js\";\nimport store from \"../store.js\";\nimport flv from 'flv.js';\nexport default {\n  store: store,\n  created: function created() {\n    if (flv.isSupported()) {\n      this.player = flv.createPlayer({\n        type: 'flv',\n        url: 'http://101.34.101.58/live?port=9988&&app=live&&stream=test'\n      });\n    }\n  },\n  data: function data() {\n    return {\n      player: null,\n      playing: false\n    };\n  },\n  methods: {},\n  mounted: function mounted() {\n    if (flv.isSupported()) {\n      var videoElement = document.getElementById('myvideo');\n      var flvPlayer = flv.createPlayer({\n        type: 'flv',\n        url: 'http://101.34.101.58/live?port=9988&&app=live&&stream=test',\n        isLive: true,\n        fluid: true // 首帧等待时长\n        // stashInitialSize: 2\n        // hasAudio: false,//是否有音频轨道\n\n      }, {\n        // lazyLoadMaxDuration: 3 * 60,\n        // enableWorker: true,\n        // 启用IO隐藏缓冲区。如果您需要实时（最小延迟）来进行实时流播放，则设置为false，但是如果网络抖动，则可能会停顿。\n        enableStashBuffer: false,\n        //是否开启播放器端缓存\n        fixAudioTimestampGap: false,\n        //音视频同步\n        isLive: true //是否为直播流\n        // autoCleanupMaxBackwardDuration:1,\n        // withCredentials: false,\n        // cors: true,        \n\n      });\n      flvPlayer.attachMediaElement(videoElement);\n      flvPlayer.load();\n      flvPlayer.play();\n    } // this.player.on(flv.Events.ERROR, (errorType, errorDetail, errorInfo) => {\n    // \t\tconsole.log(\"errorType:\", errorType);\n    //         console.log(\"errorDetail:\", errorDetail);\n    //         console.log(\"errorInfo:\", errorInfo);\n    //         //视频出错后销毁重新创建\n    //          if (this.player) {\n    //           this.player.pause();\n    //           this.player.unload();\n    //           this.player.detachMediaElement();\n    //           this.player.destroy();\n    //           this.player= null;\n    //           this.createPlayer(videoElement, this.url);\n    //         }\n    // });\n    // setInterval(() => {\n    //       if (this.player.buffered.length) {\n    //         let end = this.player.buffered.end(0);//获取当前buffered值\n    //         let diff = end - this.player.currentTime;//获取buffered与currentTime的差值\n    //         if (diff >= 1) {//如果差值大于等于0.5 手动跳帧 这里可根据自身需求来定\n    //           this.player.currentTime = this.player.buffered.end(0);//手动跳帧\n    //        }\n    //       }\n    //     }, 2000); //2000毫秒执行一次  \n\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;AAOA,OAAA,CAAA;AACA,OAAA,KAAA;AACA,OAAA,GAAA,MAAA,QAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA,KADA;AAEA,EAAA,OAFA,qBAEA;AACA,QAAA,GAAA,CAAA,WAAA,EAAA,EAAA;AACA,WAAA,MAAA,GAAA,GAAA,CAAA,YAAA,CAAA;AACA,QAAA,IAAA,EAAA,KADA;AAEA,QAAA,GAAA,EAAA;AAFA,OAAA,CAAA;AAIA;AACA,GATA;AAUA,EAAA,IAVA,kBAUA;AAAA,WAAA;AACA,MAAA,MAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAGA,GAbA;AAcA,EAAA,OAAA,EAAA,EAdA;AAgBA,EAAA,OAhBA,qBAgBA;AACA,QAAA,GAAA,CAAA,WAAA,EAAA,EAAA;AACA,UAAA,YAAA,GAAA,QAAA,CAAA,cAAA,CAAA,SAAA,CAAA;AACA,UAAA,SAAA,GAAA,GAAA,CAAA,YAAA,CAAA;AACA,QAAA,IAAA,EAAA,KADA;AAEA,QAAA,GAAA,EAAA,4DAFA;AAGA,QAAA,MAAA,EAAA,IAHA;AAIA,QAAA,KAAA,EAAA,IAJA,CAKA;AACA;AACA;;AAPA,OAAA,EASA;AACA;AACA;AACA;AACA,QAAA,iBAAA,EAAA,KAJA;AAIA;AACA,QAAA,oBAAA,EAAA,KALA;AAKA;AACA,QAAA,MAAA,EAAA,IANA,CAMA;AACA;AACA;AACA;;AATA,OATA,CAAA;AAqBA,MAAA,SAAA,CAAA,kBAAA,CAAA,YAAA;AACA,MAAA,SAAA,CAAA,IAAA;AACA,MAAA,SAAA,CAAA,IAAA;AACA,KA3BA,CA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAnEA,CAAA","sourcesContent":["<template>\n  <div>\r\n  \t<video id=\"myvideo\" style=\"width: 500px;height: 500px;\"></video>\r\n  </div>\n</template>\n\n<script>\r\n\timport $ from '../../node_modules/jquery/dist/jquery.js'\r\n\timport store from '../store.js'\r\n\timport flv from 'flv.js'\nexport default {\n\tstore,\r\n\tcreated(){\r\n\t  if(flv.isSupported()){\r\n\t    this.player = flv.createPlayer({\r\n\t      type: 'flv',\r\n\t      url: 'http://101.34.101.58/live?port=9988&&app=live&&stream=test'\r\n\t    });\r\n\t  }\r\n\t},\r\n\tdata(){return{\r\n\t  player : null,\r\n\t  playing: false,\r\n\t}},\r\n\tmethods:{\r\n\t},\r\n\tmounted() {\r\n\t\tif (flv.isSupported()) {\r\n\t\t\t  var videoElement = document.getElementById('myvideo')\r\n\t\t\t  var flvPlayer = flv.createPlayer({\r\n\t\t\t   type: 'flv',\r\n\t\t\t   url: 'http://101.34.101.58/live?port=9988&&app=live&&stream=test',\r\n\t\t\t     isLive: true,\r\n\t\t\t\t fluid:true,\r\n\t\t\t\t// 首帧等待时长\r\n\t\t\t\t// stashInitialSize: 2\r\n\t\t\t    // hasAudio: false,//是否有音频轨道\r\n\t\t\t  },\r\n\t\t\t  {\r\n\t\t\t\t   // lazyLoadMaxDuration: 3 * 60,\r\n\t\t\t\t   // enableWorker: true,\r\n\t\t\t\t// 启用IO隐藏缓冲区。如果您需要实时（最小延迟）来进行实时流播放，则设置为false，但是如果网络抖动，则可能会停顿。\r\n\t\t        enableStashBuffer: false,//是否开启播放器端缓存\r\n\t\t\t\tfixAudioTimestampGap:false,//音视频同步\r\n\t\t\t\tisLive:true,//是否为直播流\r\n\t\t\t\t// autoCleanupMaxBackwardDuration:1,\r\n\t\t\t\t// withCredentials: false,\r\n\t\t\t\t // cors: true,        \r\n\t\t                     },\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t  flvPlayer.attachMediaElement(videoElement)\r\n\t\t\t  flvPlayer.load()\r\n\t\t\t  flvPlayer.play()\r\n\t\t\t}\r\n\t\t\t// this.player.on(flv.Events.ERROR, (errorType, errorDetail, errorInfo) => {\r\n\t\t\t// \t\tconsole.log(\"errorType:\", errorType);\r\n\t\t\t//         console.log(\"errorDetail:\", errorDetail);\r\n\t\t\t//         console.log(\"errorInfo:\", errorInfo);\r\n\t\t\t//         //视频出错后销毁重新创建\r\n\t\t\t//          if (this.player) {\r\n\t\t\t//           this.player.pause();\r\n\t\t\t//           this.player.unload();\r\n\t\t\t//           this.player.detachMediaElement();\r\n\t\t\t//           this.player.destroy();\r\n\t\t\t//           this.player= null;\r\n\t\t\t//           this.createPlayer(videoElement, this.url);\r\n\t\t\t//         }\r\n\t\t\t// });\r\n\t\t\t// setInterval(() => {\r\n\t\t\t//       if (this.player.buffered.length) {\r\n\t\t\t//         let end = this.player.buffered.end(0);//获取当前buffered值\r\n\t\t\t//         let diff = end - this.player.currentTime;//获取buffered与currentTime的差值\r\n\t\t\t//         if (diff >= 1) {//如果差值大于等于0.5 手动跳帧 这里可根据自身需求来定\r\n\t\t\t//           this.player.currentTime = this.player.buffered.end(0);//手动跳帧\r\n\t\t\t//        }\r\n\t\t\t//       }\r\n\t\t\t//     }, 2000); //2000毫秒执行一次  \r\n\t},\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"less\" scoped>\n.all{\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-color: #998866;\r\n\t\r\n\t.test{\r\n\t\twidth: 50%;\r\n\t\theight: 50%;\r\n\t\tbackground-color: #223366;\r\n\t}\r\n}\r\n\r\n\n\n</style>\n"],"sourceRoot":"src/components"}]}